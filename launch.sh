#!/bin/bash

# Script de d√©marrage automatique SIT Innovation
# Usage: ./launch.sh [commande]

set -e

PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$PROJECT_DIR"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonctions d'affichage
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# V√©rification Ansible
check_ansible() {
    if ! command -v ansible-playbook &> /dev/null; then
        error "Ansible n'est pas install√©. Installez avec: pip install ansible"
    fi
}

# V√©rification et configuration Docker
setup_docker() {
    # Ajout du PATH Docker si n√©cessaire
    if ! command -v docker &> /dev/null; then
        if [ -d "/Applications/Docker.app/Contents/Resources/bin" ]; then
            export PATH="/Applications/Docker.app/Contents/Resources/bin:$PATH"
            info "Docker ajout√© au PATH"
        else
            error "Docker n'est pas install√© ou introuvable"
        fi
    fi
    
    # V√©rification que Docker est d√©marr√©
    if ! docker info &> /dev/null; then
        info "D√©marrage de Docker..."
        open -a Docker
        info "Attente du d√©marrage de Docker (30s)..."
        sleep 30
        
        # V√©rification apr√®s attente
        if ! docker info &> /dev/null; then
            error "Docker n'a pas pu √™tre d√©marr√©"
        fi
    fi
    
    success "Docker est pr√™t"
}

# Fonction d'aide
show_help() {
    echo -e "${BLUE}üöÄ SIT Innovation - Syst√®me de d√©ploiement automatis√©${NC}"
    echo ""
    echo "Usage: $0 [COMMANDE]"
    echo ""
    echo "Commandes disponibles:"
    echo "  start          - D√©marrage automatique complet"
    echo "  stop           - Arr√™t automatique (pr√©serve les donn√©es)"
    echo "  restart        - Red√©marrage automatique"
    echo "  status         - Affichage du statut"
    echo "  logs           - Affichage des logs"
    echo "  stop-apps      - Arr√™t des applications seulement"
    echo "  stop-full      - Arr√™t complet avec suppression des donn√©es"
    echo "  install        - Installation des d√©pendances"
    echo "  build          - Build des applications"
    echo "  help           - Affichage de cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0 start       # D√©marrage automatique complet"
    echo "  $0 stop        # Arr√™t s√©curis√©"
    echo "  $0 restart     # Red√©marrage"
    echo "  $0 status      # V√©rification du statut"
}

# Fonction de d√©marrage automatique
start_system() {
    info "üöÄ D√©marrage automatique du syst√®me SIT Innovation..."
    check_ansible
    setup_docker
    ansible-playbook -i ansible/inventory.yml ansible/start.yml
}

# Fonction d'arr√™t automatique
stop_system() {
    info "üõë Arr√™t automatique du syst√®me SIT Innovation..."
    check_ansible
    ansible-playbook -i ansible/inventory.yml ansible/auto-stop.yml
}

# Fonction de red√©marrage
restart_system() {
    info "üîÑ Red√©marrage du syst√®me SIT Innovation..."
    stop_system
    sleep 3
    start_system
}

# Fonction de statut
show_status() {
    info "üìä V√©rification du statut du syst√®me..."
    check_ansible
    ansible-playbook -i ansible/inventory.yml ansible/status.yml
}

# Fonction d'affichage des logs
show_logs() {
    info "üìã Logs disponibles:"
    echo ""
    if [ -f logs/backend.log ]; then
        echo -e "${BLUE}=== Backend Log (derni√®res 20 lignes) ===${NC}"
        tail -n 20 logs/backend.log
        echo ""
    fi
    if [ -f logs/frontend.log ]; then
        echo -e "${BLUE}=== Frontend Log (derni√®res 20 lignes) ===${NC}"
        tail -n 20 logs/frontend.log
        echo ""
    fi
}

# Fonction d'arr√™t des applications seulement
stop_apps() {
    info "üõë Arr√™t des applications seulement..."
    check_ansible
    ansible-playbook -i ansible/inventory.yml ansible/stop-apps.yml
}

# Fonction d'arr√™t complet avec suppression
stop_full() {
    warning "‚ö†Ô∏è  ATTENTION : Cette action va supprimer toutes les donn√©es !"
    warning "Utilisez 'stop' pour un arr√™t s√©curis√© sans perte de donn√©es."
    echo ""
    read -p "Tapez 'SUPPRIMER' pour confirmer la suppression des donn√©es : " confirmation
    if [ "$confirmation" = "SUPPRIMER" ]; then
        check_ansible
        ansible-playbook -i ansible/inventory.yml ansible/stop-full.yml
    else
        info "Op√©ration annul√©e."
    fi
}

# Fonction d'installation
install_deps() {
    info "üì¶ Installation des d√©pendances..."
    check_ansible
    ansible-playbook -i ansible/inventory.yml ansible/install.yml
}

# Fonction de build
build_apps() {
    info "üî® Build des applications..."
    check_ansible
    ansible-playbook -i ansible/inventory.yml ansible/auto-start.yml --tags build
}

# V√©rification des arguments
if [ $# -eq 0 ]; then
    show_help
    exit 0
fi

# Traitement des commandes
case "$1" in
    start)
        start_system
        ;;
    stop)
        stop_system
        ;;
    restart)
        restart_system
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    stop-apps)
        stop_apps
        ;;
    stop-full)
        stop_full
        ;;
    install)
        install_deps
        ;;
    build)
        build_apps
        ;;
    help)
        show_help
        ;;
    *)
        error "Commande inconnue: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
            error "Docker n'est pas install√©. Installez Docker Desktop depuis https://www.docker.com/products/docker-desktop/"
        fi
    fi
    
    # V√©rification que Docker est d√©marr√©
    if ! docker ps &> /dev/null; then
        warning "Docker n'est pas d√©marr√©. D√©marrage de Docker Desktop..."
        open -a Docker
        info "Attente du d√©marrage de Docker (30 secondes)..."
        sleep 30
        
        # V√©rification apr√®s attente
        if ! docker ps &> /dev/null; then
            error "Docker n'est toujours pas d√©marr√©. D√©marrez manuellement Docker Desktop et r√©essayez."
        fi
    fi
    
    success "Docker est pr√™t"
}

# Affichage de l'aide
show_help() {
    echo "üöÄ SIT Innovation - D√©ploiement automatique"
    echo ""
    echo "Usage: $0 [COMMANDE]"
    echo ""
    echo "Commandes disponibles:"
    echo "  start     D√©marrage complet (par d√©faut)"
    echo "  custom    D√©ploiement personnalis√© (choix interactif)"
    echo "  dev       D√©ploiement d√©veloppement (sans Docker)"
    echo "  stop      Arr√™t s√©curis√© (pr√©serve les donn√©es)"
    echo "  stop-apps Arr√™t des applications seulement"
    echo "  destroy   Arr√™t complet avec suppression des donn√©es"
    echo "  restart   Red√©marrage"
    echo "  status    Statut des services"
    echo "  logs      Affichage des logs"
    echo "  vault     D√©ploiement Vault uniquement"
    echo "  recreate  Recr√©ation compl√®te (‚ö†Ô∏è EFFACE TOUTES LES DONN√âES)"
    echo "  help      Affichage de cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0              # D√©marrage complet"
    echo "  $0 start        # D√©marrage complet"
    echo "  $0 custom       # D√©ploiement personnalis√©"
    echo "  $0 dev          # D√©ploiement d√©veloppement"
    echo "  $0 stop         # Arr√™t complet"
    echo "  $0 status       # V√©rification du statut"
    echo ""
    echo "üîí S√©curit√© des donn√©es:"
    echo "  - 'stop' met en pause les conteneurs (donn√©es pr√©serv√©es)"
    echo "  - 'destroy' supprime tout (utiliser avec pr√©caution)"
    echo "  - Les conteneurs existants sont pr√©serv√©s au d√©marrage"
    echo "  - Utilisez 'recreate' uniquement pour repartir de z√©ro"
    echo ""
    echo "Options de d√©ploiement personnalis√©:"
    echo "  - Choisir de d√©ployer Vault ou non"
    echo "  - Choisir de d√©ployer l'infrastructure (PostgreSQL, Redis, Nginx)"
    echo "  - Choisir de d√©ployer les applications (Backend, Frontend)"
}

# Fonction principale
main() {
    local command="${1:-start}"
    
    case "$command" in
        start)
            info "D√©marrage complet de SIT Innovation..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/deploy-full.yml
            success "D√©marrage termin√© ! üéâ"
            echo ""
            info "URLs disponibles:"
            echo "  - Application: http://localhost"
            echo "  - Vault: http://localhost:8200"
            echo "  - Backend: http://localhost:4000"
            echo "  - Frontend: http://localhost:3000"
            ;;
        custom)
            info "D√©ploiement personnalis√© de SIT Innovation..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/deploy-custom.yml
            success "D√©ploiement personnalis√© termin√© ! üéâ"
            echo ""
            info "V√©rifiez les URLs affich√©es dans le r√©sum√© ci-dessus"
            ;;
        dev)
            info "D√©ploiement d√©veloppement (sans Docker)..."
            check_ansible
            # Pas besoin de Docker pour le mode dev
            ansible-playbook -i ansible/inventory.yml ansible/deploy-dev.yml
            success "D√©ploiement d√©veloppement termin√© ! üéâ"
            echo ""
            info "Applications d√©marr√©es en mode d√©veloppement"
            ;;
        stop)
            info "Arr√™t s√©curis√© de SIT Innovation (donn√©es pr√©serv√©es)..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/stop-safe.yml
            success "Arr√™t s√©curis√© termin√© ! ÔøΩ"
            ;;
        stop-apps)
            info "Arr√™t des applications (pr√©servation des services Docker)..."
            check_ansible
            ansible-playbook -i ansible/inventory.yml ansible/stop-apps.yml
            success "Applications arr√™t√©es ! üîß"
            ;;
        destroy)
            info "Arr√™t complet avec suppression des donn√©es..."
            warning "ATTENTION : Cette op√©ration va supprimer TOUTES les donn√©es !"
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/stop-full.yml
            success "Arr√™t complet termin√© ! üõë"
            ;;
        restart)
            info "Red√©marrage de SIT Innovation..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/restart.yml
            success "Red√©marrage termin√© ! üîÑ"
            ;;
        status)
            info "V√©rification du statut..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/status.yml
            ;;
        logs)
            info "Affichage des logs..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/logs.yml
            ;;
        vault)
            info "D√©ploiement Vault uniquement..."
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/deploy-vault.yml
            success "Vault d√©ploy√© ! üîê"
            ;;
        recreate)
            info "Recr√©ation compl√®te des services..."
            warning "ATTENTION : Cette op√©ration va supprimer TOUTES les donn√©es !"
            check_ansible
            setup_docker
            ansible-playbook -i ansible/inventory.yml ansible/recreate.yml
            exit_code=$?
            if [ $exit_code -eq 0 ]; then
                success "Services recr√©√©s ! Toutes les donn√©es ont √©t√© effac√©es. üîÑ"
            else
                error "Erreur lors de la recr√©ation"
                exit $exit_code
            fi
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            error "Commande inconnue: $command"
            show_help
            ;;
    esac
}

# Ex√©cution
main "$@"
